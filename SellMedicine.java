import dao.ConnectionProvider;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.table.TableModel;
import java.sql.Statement;



/**
 *
 * @author Kanishka Rajapaksha
 */
public class SellMedicine extends javax.swing.JFrame {
    public String numberPattern ="^[0-9]*$";
    private int finalTotalPrice=0;
    private String billId="";
    private String username="";

    /**
     * Creates new form SellMedicine
     */
    public SellMedicine() {
        initComponents();
    }
    
    public SellMedicine(String tempUsername) {
        initComponents();
        username = tempUsername;
        setLocationRelativeTo(null);
    }
    private void medicineName(String med_nameOrmed_id){
    DefaultTableModel model=(DefaultTableModel)medicineTable.getModel();
    model.setRowCount(0);
    try {
        Connection con=ConnectionProvider.getCon();
        Statement st=con.createStatement();
        ResultSet rs=st.executeQuery("select *from medicine where med_name like '"+med_nameOrmed_id+"%' or med_id like '"+med_nameOrmed_id+"%'");
        while(rs.next()) {
            model.addRow(new Object[]{rs.getString("med_id")+"- "+rs.getString("med_name")});
        }
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    
    private void clearMedicineFields() {
        txt_medid.setText("");
        txt_medname.setText("");
        txt_companyname.setText("");
        txt_price.setText("");
        txt_units.setText("");
        txt_total.setText("");
    }
    
    public String getMedicineID(String prefix){
        return prefix + System.nanoTime();   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_search = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicineTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txt_medname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_total = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_medid = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_companyname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_price = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_units = new javax.swing.JTextField();
        btn_cart = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        btn_print = new javax.swing.JButton();
        lbl_finalTotalPrice = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btn_back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(0, 153, 204));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("                                           Sell Medicine");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 120));

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setOpaque(true);
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 1370, 10));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Search");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 25, -1, -1));

        txt_search.setBackground(new java.awt.Color(255, 255, 255));
        txt_search.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txt_search.setForeground(new java.awt.Color(0, 0, 0));
        txt_search.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
        });
        jPanel1.add(txt_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 50, 360, 27));

        medicineTable.setBackground(new java.awt.Color(255, 255, 255));
        medicineTable.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        medicineTable.setForeground(new java.awt.Color(0, 0, 0));
        medicineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicines"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        medicineTable.getTableHeader().setReorderingAllowed(false);
        medicineTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medicineTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(medicineTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 97, 360, 379));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Company Name");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(584, 172, 127, -1));

        txt_medname.setBackground(new java.awt.Color(255, 255, 255));
        txt_medname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txt_medname.setForeground(new java.awt.Color(0, 0, 0));
        txt_medname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txt_medname, new org.netbeans.lib.awtextra.AbsoluteConstraints(584, 124, 287, 30));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Name");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(584, 97, 127, -1));

        txt_total.setBackground(new java.awt.Color(255, 255, 255));
        txt_total.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txt_total.setForeground(new java.awt.Color(0, 0, 0));
        txt_total.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txt_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(967, 199, 287, 30));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Medicine ID");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(584, 22, 127, -1));

        txt_medid.setBackground(new java.awt.Color(255, 255, 255));
        txt_medid.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txt_medid.setForeground(new java.awt.Color(0, 0, 0));
        txt_medid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txt_medid, new org.netbeans.lib.awtextra.AbsoluteConstraints(584, 49, 287, 30));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Total Price");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(967, 172, 127, -1));

        txt_companyname.setBackground(new java.awt.Color(255, 255, 255));
        txt_companyname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txt_companyname.setForeground(new java.awt.Color(0, 0, 0));
        txt_companyname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txt_companyname, new org.netbeans.lib.awtextra.AbsoluteConstraints(584, 199, 287, 30));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Price per unit");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(967, 22, 127, -1));

        txt_price.setBackground(new java.awt.Color(255, 255, 255));
        txt_price.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txt_price.setForeground(new java.awt.Color(0, 0, 0));
        txt_price.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txt_price, new org.netbeans.lib.awtextra.AbsoluteConstraints(967, 49, 287, 30));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("No.of units");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(967, 97, 127, -1));

        txt_units.setBackground(new java.awt.Color(255, 255, 255));
        txt_units.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txt_units.setForeground(new java.awt.Color(0, 0, 0));
        txt_units.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_units.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_unitsKeyReleased(evt);
            }
        });
        jPanel1.add(txt_units, new org.netbeans.lib.awtextra.AbsoluteConstraints(967, 124, 287, 30));

        btn_cart.setBackground(new java.awt.Color(153, 204, 255));
        btn_cart.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_cart.setForeground(new java.awt.Color(0, 0, 0));
        btn_cart.setIcon(new javax.swing.ImageIcon("C:\\Users\\Kanishka Rajapaksha\\Downloads\\icons8-add-to-cart-20.png")); // NOI18N
        btn_cart.setText("Add To Cart");
        btn_cart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cartActionPerformed(evt);
            }
        });
        jPanel1.add(btn_cart, new org.netbeans.lib.awtextra.AbsoluteConstraints(1104, 241, 144, 24));

        cartTable.setBackground(new java.awt.Color(255, 255, 255));
        cartTable.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        cartTable.setForeground(new java.awt.Color(0, 0, 0));
        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine ID", "Name", "Company Name", "Price per Unit", "No Of Units", "Total Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        cartTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cartTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(cartTable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(586, 276, 662, 187));

        btn_print.setBackground(new java.awt.Color(153, 204, 255));
        btn_print.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_print.setForeground(new java.awt.Color(0, 0, 0));
        btn_print.setIcon(new javax.swing.ImageIcon("C:\\Users\\Kanishka Rajapaksha\\Downloads\\icons8-print-20.png")); // NOI18N
        btn_print.setText("Purchase & Print");
        jPanel1.add(btn_print, new org.netbeans.lib.awtextra.AbsoluteConstraints(1086, 475, -1, 24));

        lbl_finalTotalPrice.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        lbl_finalTotalPrice.setForeground(new java.awt.Color(0, 0, 0));
        lbl_finalTotalPrice.setText("00");
        jPanel1.add(lbl_finalTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(878, 475, 109, 35));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Rs:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(817, 475, 55, 35));

        btn_back.setBackground(new java.awt.Color(0, 153, 204));
        btn_back.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_back.setForeground(new java.awt.Color(255, 255, 255));
        btn_back.setIcon(new javax.swing.ImageIcon("C:\\Users\\Kanishka Rajapaksha\\Downloads\\icons8-back-24.png")); // NOI18N
        btn_back.setText("Back");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });
        jPanel1.add(btn_back, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 482, 101, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 1370, 640));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
       medicineName("");
       txt_medid.setEditable(false);
       txt_medname.setEditable(false);
       txt_companyname.setEditable(false);
       txt_price.setEditable(false);
       
    }//GEN-LAST:event_formComponentShown

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
        // TODO add your handling code here:
        String search=txt_search.getText();
        medicineName(search);
    }//GEN-LAST:event_txt_searchKeyReleased

    private void medicineTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medicineTableMouseClicked
        // TODO add your handling code here:
        int index = medicineTable.getSelectedRow();
        TableModel model= medicineTable.getModel();
        String med_nameOrmed_id = model.getValueAt(index,0).toString();
        
        String med_id[]= med_nameOrmed_id.split("-",0);
        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM medicine WHERE med_id = '" + med_id[0] + "'");

            while(rs.next()) {
                txt_medid.setText(med_id[0]);
                txt_medname.setText(rs.getString("med_name"));
                txt_companyname.setText(rs.getString("company_name"));
                txt_price.setText(rs.getString("med_price"));
                txt_units.setText("");
                txt_total.setText("");
            }
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_medicineTableMouseClicked

    private void txt_unitsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_unitsKeyReleased
                                              
    // TODO add your handling code here:
    // TODO add your handling code here:
        String noOfUnits = txt_units.getText();
        if(!noOfUnits.equals("")) {
            String price= txt_price.getText();
            if(!noOfUnits.matches(numberPattern)) {
            JOptionPane.showMessageDialog(null, "Number of Units field is invalid");    
            }
            int totalPrice = Integer.parseInt(noOfUnits) * Integer.parseInt(price);
            txt_total.setText(String.valueOf(totalPrice));

        }
        else {
            txt_total.setText("");
        }


    }//GEN-LAST:event_txt_unitsKeyReleased

    private void btn_cartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cartActionPerformed
        
    // TODO add your handling code here:
        String noOfUnits=txt_units.getText();
        String med_id=txt_medid.getText();
        
        if(!noOfUnits.equals("") && !med_id.equals("")) {
            String med_name=txt_medname.getText();
            String company_name=txt_companyname.getText();
            String med_price=txt_price.getText();
            String totalPrice=txt_total.getText();
            int checkstock =0;
            int checkMedicineAlreadyExistInCart=0;
            
            try {
                Connection con=ConnectionProvider.getCon();
                Statement st=con.createStatement();
                ResultSet rs=st.executeQuery("select *from medicine where med_id="+med_id+"");
                while(rs.next()) {
                    if(rs.getInt("med_quantity") >= Integer.parseInt(noOfUnits)) {
                        checkstock = 1;
                    }else {
                        JOptionPane.showMessageDialog(null, "Medicine is out of stock. Only "+rs.getInt("quantity")+" Left");
                        
                    }
                }
            } 
            catch(Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            if(checkstock == 1) {
                DefaultTableModel dtm=(DefaultTableModel) cartTable.getModel();
                if(cartTable.getRowCount() !=0) {
                    for(int i=0;i <cartTable.getRowCount();i++) {
                        if(Integer.parseInt(dtm.getValueAt(i, 0).toString()) == Integer.parseInt(med_id)) {
                            checkMedicineAlreadyExistInCart= 1;
                            JOptionPane.showMessageDialog(null, "Medicine already exist in cart");
                        }
                    }
                }
            if (checkMedicineAlreadyExistInCart == 0) {
              dtm.addRow(new Object[]{med_id,med_name,company_name,med_price,noOfUnits,totalPrice});
              finalTotalPrice = finalTotalPrice + Integer.parseInt(totalPrice);
              lbl_finalTotalPrice.setText(String.valueOf(finalTotalPrice));
              JOptionPane.showMessageDialog(null,"Added Successfully");
            }
            clearMedicineFields();
            }
        } else{
            JOptionPane.showMessageDialog(null, "No of Units and Medicine ID field is required");
        }
            
                                 

            
    

            
    }//GEN-LAST:event_btn_cartActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:
        PharmacistDashboard pdash1= new PharmacistDashboard();
        pdash1.show();
        dispose();
    }//GEN-LAST:event_btn_backActionPerformed

    private void cartTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartTableMouseClicked
        // TODO add your handling code here:
        int index = cartTable.getSelectedRow();
        int a = JOptionPane.showConfirmDialog(null, "Do you want to remove this Medicine","Select",JOptionPane.YES_NO_OPTION);
        if(a==0) {
            TableModel model=cartTable.getModel();
            String total = model.getValueAt(index,5).toString();
            finalTotalPrice = finalTotalPrice - Integer.parseInt(total);
            lbl_finalTotalPrice.setText(String.valueOf(finalTotalPrice));
            ((DefaultTableModel) cartTable.getModel()).removeRow(index);
        }
    }//GEN-LAST:event_cartTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellMedicine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_cart;
    private javax.swing.JButton btn_print;
    private javax.swing.JTable cartTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl_finalTotalPrice;
    private javax.swing.JTable medicineTable;
    private javax.swing.JTextField txt_companyname;
    private javax.swing.JTextField txt_medid;
    private javax.swing.JTextField txt_medname;
    private javax.swing.JTextField txt_price;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_total;
    private javax.swing.JTextField txt_units;
    // End of variables declaration//GEN-END:variables
}
